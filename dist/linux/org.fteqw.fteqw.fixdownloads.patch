diff --git a/engine/client/m_download.c b/engine/client/m_download.c
index 2d618c1b1..74a4a51b4 100644
--- a/engine/client/m_download.c
+++ b/engine/client/m_download.c
@@ -2205,7 +2205,9 @@ static void PM_PreparePackageList(void)
 	{
 		int parm;
 		qofs_t sz = 0;
-		char *f = FS_MallocFile(INSTALLEDFILES, FS_ROOT, &sz);
+		char full_filename[256];
+		snprintf(full_filename, sizeof(full_filename), "%s/%s", getenv("XDG_DATA_HOME"), INSTALLEDFILES);
+		char *f = FS_MallocFile(full_filename, FS_ROOT, &sz);
 		loadedinstalled = true;
 		if (f)
 		{
@@ -3526,11 +3528,13 @@ static void PM_WriteInstalledPackages(void)
 	int i;
 	char *s;
 	package_t *p;
-	vfsfile_t *f = FS_OpenVFS(INSTALLEDFILES, "wbp", FS_ROOT);
+	char full_filename[256];
+	snprintf(full_filename, sizeof(full_filename), "%s/%s", getenv("XDG_DATA_HOME"), INSTALLEDFILES);
+	vfsfile_t *f = FS_OpenVFS(full_filename, "wbp", FS_ROOT);
 	qboolean v3 = false;
 	if (!f)
 	{
-		if (FS_DisplayPath(INSTALLEDFILES, FS_ROOT, buf, sizeof(buf)))
+		if (FS_DisplayPath(full_filename, FS_ROOT, buf, sizeof(buf)))
 			Con_Printf("package manager: Can't write %s\n", buf);
 		else
 			Con_Printf("package manager: Can't update installed list\n");
@@ -5939,7 +5943,7 @@ static void MD_Draw (int x, int y, struct menucustom_s *c, struct emenu_s *m)
 		if (p->flags & DPF_DISPLAYVERSION)
 			n = va("%s (%s)", n, *p->version?p->version:"unversioned");
 
-		if (p->flags & DPF_TESTING)	//hide testing updates 
+		if (p->flags & DPF_TESTING)	//hide testing updates
 			n = va("^h%s", n);
 
 		if (!PM_CheckPackageFeatures(p))
@@ -6264,7 +6268,7 @@ static qboolean MD_Source_Key (struct menucustom_s *c, struct emenu_s *m, int ke
 
 static void MD_AutoUpdate_Draw (int x, int y, struct menucustom_s *c, struct emenu_s *m)
 {
-	char *settings[] = 
+	char *settings[] =
 	{
 		"Off",
 		"Stable Updates",
